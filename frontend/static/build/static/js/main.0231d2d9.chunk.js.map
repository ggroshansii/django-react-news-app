{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/User/UserBlogList/UserBlogPost/UserBlogPost.js","components/Main/BlogPostList/BlogPost/BlogPost.js","components/User/UserBlogList/UserBlogList.js","components/User/UserBlogEditDetail/UserBlogEditDetail.js","components/Main/BlogPostList/BlogPostList.js","components/Main/Aside/AsideItem/AsideItem.js","components/Main/Aside/Aside.js","components/Main/BlogForm/BlogForm.js","components/Main/Main.js","components/User/Profile/Profile.js","components/User/Registration/Registration.js","components/User/Login/Login.js","components/Main/BlogDetail/BlogDetailReadOnly.js","components/User/AdminBlogList/AdminBlogSubmitPost/AdminBlogSubmitPost.js","components/User/AdminBlogList/AdminBlogRejectPost/AdminBlogRejectPost.js","components/User/AdminBlogList/AdminBlogPublishPost/AdminBlogPublishPost.js","components/User/AdminBlogList/AdminBlogList.js","App.js","index.js"],"names":["Header","props","month_string","loginRegisterLink","logoutLink","profileLink","adminLink","currentDate","Date","getMonth","getDate","getFullYear","day","year","a","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","console","log","json","remove","setIsAuth","setIsAdmin","isAuth","className","onClick","to","isAdmin","href","id","style","Footer","withRouter","updatedObj","title","category","status","ok","data","src","image","alt","author","history","push","value","submitForReview","removeBlog","OwnBlogsState","setOwnBlogsState","BlogPost","updatePopularityScore","UserBlogList","html","useState","categorySelection","setCategorySelection","useEffect","grabOwnBlogs","length","map","blog","HTMLfor","onChange","e","target","selected","blogObj","setBlogObj","useHistory","blogID","match","params","handleChange","updatedBlogObj","preventDefault","formData","FormData","append","getBlogDetail","onSubmit","htmlFor","type","placeholder","name","file","files","FileReader","readAsDataURL","BlogPostList","currentBlogs","filteredBlogs","AsideItem","Aside","sortedBlogs","sort","b","popularity_score","BlogForm","post","setPost","setPreview","updatedPost","reader","onloadend","result","Main","uniqueCategories","Set","handleClick","setFilter","add","Profile","alias","avatar","userDetails","username","email","Registration","password1","password2","user","setUser","error","setError","updatedUser","element","set","key","Login","password","adminArticles","setAdminArticles","AdminBlogList","grabAdminArticles","App","setCurrentBlogs","filter","setUserDetails","header","is_staff","is_superuser","arr","func","index","findIndex","updatedArr","splice","newPopularityScore","checkAuth","grabBlogs","grabUserDetails","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0231d2d9.chunk.js","sourcesContent":["import \"./Header.css\";\nimport React from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { FaGithub, FaTwitter,FaLaptopCode, FaLinkedin } from \"react-icons/fa\"\n\nexport default function Header(props) {\n    const currentDate = new Date();\n    const [month, day, year] = [\n        currentDate.getMonth(),\n        currentDate.getDate(),\n        currentDate.getFullYear(),\n    ];\n\n    async function handleLogout() {\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify({}),\n        };\n        const response = await fetch(\"/rest-auth/logout/\", options);\n        if (!response) {\n            console.log(response);\n        } else {\n            console.log(response);\n            const data = await response.json();\n            Cookies.remove(\"Authorization\");\n            props.setIsAuth(false);\n            props.setIsAdmin(false);\n        }\n    }\n\n    function handleLogoClick() {}\n\n    let month_string;\n    switch (month + 1) {\n        case 1:\n            month_string = \"January\";\n            break;\n        case 2:\n            month_string = \"February\";\n            break;\n        case 3:\n            month_string = \"March\";\n            break;\n        case 4:\n            month_string = \"April\";\n            break;\n        case 5:\n            month_string = \"May\";\n            break;\n        case 6:\n            month_string = \"June\";\n            break;\n        case 7:\n            month_string = \"July\";\n            break;\n        case 8:\n            month_string = \"August\";\n            break;\n        case 9:\n            month_string = \"September\";\n            break;\n        case 10:\n            month_string = \"October\";\n            break;\n        case 11:\n            month_string = \"November\";\n            break;\n        case 12:\n            month_string = \"December\";\n            break;\n    }\n\n    let loginRegisterLink;\n    let logoutLink;\n    let profileLink;\n    let adminLink;\n\n    if (props.isAuth === true) {\n        logoutLink = (\n            <li className=\"nav-item\" onClick={handleLogout}>\n                <NavLink className=\"nav-link\" to=\"/logout\">\n                    LOGOUT\n                </NavLink>\n            </li>\n        );\n\n        if (props.isAdmin === true) {\n            console.log(\"ADMIN FIRED\", props.isAdmin);\n            adminLink = (\n                <>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/admin/portal\">\n                            ADMIN PORTAL\n                        </NavLink>\n                    </li>\n                </>\n            );\n        } else {\n            profileLink = (\n                <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        PROFILE\n                    </NavLink>\n                </li>\n            );\n        }\n    } else {\n        loginRegisterLink = (\n            <>\n                <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/login\">\n                        LOGIN\n                    </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/registration\">\n                        REGISTRATION\n                    </NavLink>\n                </li>\n            </>\n        );\n    }\n\n    return (\n        <div className=\"header-container\">\n            <div className=\"upper-header-container\">\n            \n            <h1 className=\"newspaper-name\" onClick={handleLogoClick}>\n            <NavLink className=\"newspaper-headin-navlink\" to=\"/\">The Gartholomew Gazette    </NavLink>\n                </h1>\n            \n\n\n                <h2 className=\"header-date\">\n                    {month_string}, {day} {year}{\" \"}\n                </h2>\n                <div className=\"header-social-container\">\n                <a href=\"https://github.com/ggroshansii\" className=\"social-btn github-header-btn\"><FaGithub /></a>\n                <a href=\"https://twitter.com/codingforsci\" className=\"social-btn twitter-header-btn\"><FaTwitter/></a>\n                <a href=\"https://ggroshansii.github.io/\" className=\"social-btn website-header-btn\"><FaLaptopCode/></a>\n                <a href=\"https://linkedin.com/in/garthgroshansii\" className=\"social-btn linkedin-header-btn\"><FaLinkedin/></a>\n                </div>\n            </div>\n\n            <div className=\"collpase navbar-collapse \" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav nav-container\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" style=\"\" to=\"/\">\n                            HOME\n                        </NavLink>\n                    </li>\n                    {profileLink}\n                    {loginRegisterLink}\n                    {adminLink}\n                    {logoutLink}\n                    \n                </ul>\n            </div>\n        </div>\n    );\n}\n","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport \"./UserBlogPost.css\";\nimport {withRouter } from \"react-router-dom\";\nimport Cookies from 'js-cookie'\n\nfunction UserBlogPost(props) {\n\n    async function submitForReview() {\n\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            status: 'SBMT'\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/mydrafts/${props.id}/`, options)\n        if (response.ok === false) {\n            console.log(\"SUBMIT FOR REVIEW FAILED\", response);\n        } else {\n            const data = await response.json()\n            console.log(\"Success for submit for review\", data);\n        }\n    }\n\n    function handleEditClick() {\n        console.log(\"hey\")\n        props.history.push(`/account/blogs/detail/${props.id}`)\n    }\n\n    function handleFinalSubmit() {\n        submitForReview()\n        props.removeBlog(props.id, props.OwnBlogsState, props.setOwnBlogsState)\n        props.history.push('/account/blogs/drafts/')\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"ownblog-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={props.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{props.category}</p>\n                        <h2 className=\"blog-card-title\">{props.title}</h2>\n                        <p className=\"blog-card-author\">{props.author}</p>\n                    </div>\n                    <div className=\"ownblog-edit-btn-container\">\n                      <button className=\"btn btn-warning ownblog-btn\" onClick={handleEditClick}>Edit</button>\n                        <button className=\"btn btn-success ownblog-btn\" value={props.id} onClick={handleFinalSubmit}>\n                            Final Submit\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(UserBlogPost)\n","import React from \"react\";\nimport \"./BlogPost.css\";\nimport { useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { NavLink } from 'react-router-dom'\n\nexport default function BlogPost(props) {\n\n\n    function handleScoreUpdate() {\n        console.log(\"IS AUTH\", props.isAuth)\n        console.log(\"!IS AUTH\", !props.isAuth)\n        if (props.isAuth === false) {\n            props.updatePopularityScore(props.id, props)\n        }\n\n    }\n\n    return (\n        <div onClick={handleScoreUpdate}>\n            <NavLink to={`/blogs/detail/${props.id}`} className=\"nav-link-container\">\n                <div className=\"blog-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={props.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{props.category}</p>\n                        <h2 className=\"blog-card-title\">{props.title}</h2>\n                        <p className=\"blog-card-author\">By: {props.author}</p>\n                    </div>\n                </div>\n            </NavLink>\n        </div>\n    );\n}\n","import Cookies from \"js-cookie\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport UserBlogPost from \"./UserBlogPost/UserBlogPost\";\nimport BlogPost from \"../../Main/BlogPostList/BlogPost/BlogPost\"\nimport \"./UserBlogList.css\";\n\nexport default function UserBlogList(props) {\n    const [OwnBlogsState, setOwnBlogsState] = useState([]);\n    const [categorySelection, setCategorySelection] = useState(\"ALL\");\n\n    useEffect(() => {\n        grabOwnBlogs(categorySelection);\n    }, [, categorySelection]);\n\n    async function grabOwnBlogs(category = \"ALL\") {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/articles/user/${category}`, options);\n        if (response.ok === false) {\n            console.log(\"FAILED\", response);\n        } else {\n            const data = await response.json();\n            setOwnBlogsState(data);\n        }\n    }\n\n    let html;\n    if (OwnBlogsState.length === 0) {\n           html = <h1 className=\"no-current-drafts-heading mx-auto mt-10\">\n                No Current Articles in this Section\n            </h1>\n    }\n\n    function handleOptionChange(e) {\n        setCategorySelection(e.target.value);\n    }\n\n\n    if (categorySelection == \"DFT\") {\n        html = OwnBlogsState.map((blog) => {\n            return (\n                <UserBlogPost\n                    {...blog}\n                    removeBlog={props.removeBlog}\n                    setOwnBlogsState={setOwnBlogsState}\n                    OwnBlogsState={OwnBlogsState}\n                />\n            );\n        });\n    } else  {\n        html = OwnBlogsState.map((blog) => {\n            return (\n                <BlogPost\n                    {...blog}\n                    removeBlog={props.removeBlog}\n                    setOwnBlogsState={setOwnBlogsState}\n                    OwnBlogsState={OwnBlogsState}\n                />\n            );\n        });\n    } \n\n    return (\n        <div>\n            <div className=\"admin-blog-list-container\">\n                <form className=\"form-control\">\n                    <div className=\"form-group\">\n                        <label HTMLfor=\"status\">\n                            Filter Your Blogs by Status:\n                        </label>\n\n                        <select\n                            id=\"status\"\n                            className=\"form-select\"\n                            onChange={handleOptionChange}\n                            value={categorySelection}\n                        >\n                            <option value=\"ALL\" selected>\n                                All\n                            </option>\n                            <option value=\"DFT\">Draft</option>\n                            <option value=\"SBMT\">Submitted</option>\n                            <option value=\"PBLH\">Published</option>\n                            <option value=\"RJT\">Rejected</option>\n                        </select>\n                    </div>\n                </form>\n\n                <div className=\"ownblogs-list-container\">{html}</div>\n            </div>\n\n            <div className=\"ownblogs-list-container\"></div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { useState, useEffect } from \"react\";\nimport \"./UserBlogEditDetail.css\";\nimport { FiEdit3 } from \"react-icons/fi\";\n\nfunction UserBlogPostDetail(props) {\n\n    const [blogObj, setBlogObj] = useState({\n        id: null,\n        author: \"\",\n        title: \"\",\n        body: \"\",\n        category: \"\",\n        image: \"\",\n        status: \"\",\n    });\n\n    const history = useHistory();\n    const blogID = props.match.params.id;\n\n    useEffect(() => {\n        getBlogDetail();\n    }, []);\n\n    async function getBlogDetail() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/articles/mydrafts/${blogID}`, options);\n        if (response.ok === false) {\n            console.log(\"Detail Failed\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"success\", data);\n            setBlogObj({\n                id: data.id,\n                author: data.author,\n                title: data.title,\n                body: data.body,\n                image: \"\",\n                category: data.category,\n                status: data.status,\n            });\n        }\n    }\n\n    function handleChange(e) {\n        let updatedBlogObj = {...blogObj}\n        updatedBlogObj[e.target.id] = e.target.value;\n        setBlogObj(updatedBlogObj)\n        console.log(blogObj.image)\n    }\n\n    function handleImage(e) {\n        const file = e.target.files[0]\n        let updatedBlogObj = {...blogObj}\n        updatedBlogObj[e.target.id] = file\n\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n    }\n\n\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        const formData = new FormData ();\n        formData.append('id', blogObj.id)\n        formData.append('author', blogObj.author)\n        formData.append('title', blogObj.title)\n        formData.append('body', blogObj.body)\n        formData.append('category', blogObj.category)\n        formData.append('status', blogObj.status)\n\n        if (blogObj.image !== \"\") {\n            formData.append('image', blogObj.image)\n        }\n\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: formData,\n        }\n        const response = await fetch(`/api/articles/mydrafts/${blogID}/`, options)\n        if (response.ok === false) {\n            console.log(\"EDIT POST FAILED\", response)\n        } else {\n            const data = await response.json()\n            console.log(\"EDIT SUCCESS\", data)\n            history.push(\"/account/blogs/drafts\")\n        }\n    }\n\n    return (\n        <div className=\"blogform-container\">\n        <h2 className=\"blogform-heading mb-3\">Edit Blog:</h2>\n            <form className=\"form-control\" onSubmit={handleSubmit}>\n                \n                <div className=\"form-group mt-2\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input\n                        className=\"form-control mt-1\"\n                        type=\"text\"\n                        id=\"title\"\n                        placeholder=\"Enter Title..\"\n                        onChange={handleChange}\n                        value={blogObj.title}\n                        name=\"title\"\n                    />\n                </div>\n                <div className=\"form-group mt-2\">\n                    <label htmlFor=\"body\">Body</label>\n                    <textarea\n                        className=\"form-control mt-1\"\n                        id=\"body\"\n                        placeholder=\"Enter Body..\"\n                        onChange={handleChange}\n                        value={blogObj.body}\n                        name=\"body\"\n                    />\n                </div>\n                <div className=\"form-group mt-2\">\n                    <label htmlFor=\"image\">Image</label>\n                    <input\n                        className=\"form-control mt-1\"\n                        type=\"file\"\n                        id=\"image\"\n                        onChange={handleImage}\n                        name=\"image\"\n                    />\n                </div>\n                <div className=\"form-group mt-2\">\n                    <label htmlFor=\"category\">Category</label>\n                    <select\n                        className=\"form-control mt-1\"\n                        id=\"category\"\n                        onChange={handleChange}\n                        value={blogObj.category}\n                        name=\"category\"\n                    >\n                        <option value=\"General Science\">General Science</option>\n                        <option value=\"Geology\">Geology</option>\n                        <option value=\"Soil Science\">Soil Science</option>\n                        <option value=\"Hydrology\">Hydrology</option>\n                        <option value=\"Mineralogy\">Mineralology</option>\n                        <option value=\"Petrology\">Petrology</option>\n                        <option value=\"Sedimentology\">Sedimentology</option>\n                        <option value=\"Volcanology\">Volcanology</option>\n                        <option value=\"General Tectonics\">General Tectonics</option>\n                    </select>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-goldenrod blogform-btn mt-3\">Submit New Draft</button>\n            </form>\n        </div>\n    );\n}\n\nexport default withRouter(UserBlogPostDetail);\n","import React from 'react'\nimport BlogPost from './BlogPost/BlogPost'\nimport \"./BlogPostList.css\"\n\nexport default function BlogPostList(props) {\n\n    let currentBlogs = props.filteredBlogs()\n    console.log(currentBlogs)\n    return (\n        <div className=\"blog-post-list-container\">\n            {currentBlogs.map(blog => {\n                return <BlogPost updatePopularityScore={props.updatePopularityScore} {...blog}/>\n            })}\n        </div>\n    )\n}\n","import React from \"react\";\nimport \"./AsideItem.css\";\nimport { NavLink } from \"react-router-dom\"\n\nexport default function AsideItem(props) {\n    return (\n        <NavLink to={`/blogs/detail/${props.id}`} className=\"aside-item-navlink\">\n        <div className=\"aside-item-container\">\n            \n            <div className=\"aside-item-img-container\">\n                <img\n                    className=\"aside-item-img\"\n                    src={props.image}\n                    alt=\"\"\n                />\n            </div>\n            <div className=\"aside-item-text-container\">\n                <p className=\"aside-item-category\">#{props.category}</p>\n                <h2 className=\"aside-item-title\">\n                    {props.title}\n                </h2>\n                <p className=\"aside-item-author\">{props.author}</p>\n            </div>\n            \n        </div>\n        </NavLink>\n    );\n}\n","\nimport React from 'react'\nimport \"./Aside.css\"\nimport AsideItem from \"./AsideItem/AsideItem\"\n\nexport default function Aside(props) {\n\n    let sortedBlogs = [...props.currentBlogs].sort((a,b) => {\n        if ( a.popularity_score > b.popularity_score ){\n            return -1;\n          }\n          if ( a.popularity_score < b.popularity_score){\n            return 1;\n          }\n          return 0;\n        }\n    )\n\n    return (\n        <div>\n            <div className=\"aside-container\">\n                <h2 className=\"aside-heading\">Popular Posts</h2>\n                {sortedBlogs.map(blog => {\n                    return <AsideItem {...blog}/> \n                })}\n            </div>\n        </div>\n    )\n}\n","import Cookies from \"js-cookie\";\nimport React from \"react\";\nimport { useState } from 'react'\nimport \"./BlogForm.css\"\n\nexport default function BlogForm() {\n\n    const [post, setPost] = useState({\n        title: \"\",\n        body: \"\",\n        image: null,\n        category: \"General Science\",\n    })\n\n    const [preview, setPreview] = useState()\n\n    function handleChange(e) {\n        let updatedPost = {\n            ...post,\n        }\n        updatedPost[e.target.id] = e.target.value;\n        setPost(updatedPost)\n        console.log(post)\n    }\n    \n    function handleImage(e) {\n        let updatedPost = {\n            ...post\n        }\n        const file = e.target.files[0];\n        updatedPost['image'] = file;\n        setPost(updatedPost)\n\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            setPreview(reader.result);\n        }\n        reader.readAsDataURL(file);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('title', post.title)\n        formData.append('body', post.body)\n        formData.append('image', post.image)\n        formData.append('category', post.category)\n\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get('csrftoken')\n            },\n            body: formData\n        }\n        const response = await fetch(\"/api/articles/\", options)\n        const data = await response.json()\n        if (response.ok === false) {\n        } else {\n            setPost(() => ({\n                title: \"\",\n                body: \"\",\n                image: null,\n                category: \"General Science\",\n            }))\n        }\n    }\n\n    return (\n        <div className=\"blogform-container\">\n        <h2 className=\"blogform-heading mb-3\">Submit a Blog:</h2>\n            <form className=\"form-control\" onSubmit={handleSubmit}>\n                \n                <div className=\"form-group mt-2\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input\n                        className=\"form-control mt-1\"\n                        type=\"text\"\n                        id=\"title\"\n                        placeholder=\"Enter Title..\"\n                        onChange={handleChange}\n                        value={post.title}\n                        name=\"title\"\n                    />\n                </div>\n                <div className=\"form-group mt-2\">\n                    <label htmlFor=\"body\">Body</label>\n                    <textarea\n                        className=\"form-control mt-1\"\n                        id=\"body\"\n                        placeholder=\"Enter Body..\"\n                        onChange={handleChange}\n                        value={post.body}\n                        name=\"body\"\n                    />\n                </div>\n                <div className=\"form-group mt-2\">\n                    <label htmlFor=\"image\">Image</label>\n                    <input\n                        className=\"form-control mt-1\"\n                        type=\"file\"\n                        id=\"image\"\n                        onChange={handleImage}\n                        name=\"image\"\n                    />\n                </div>\n                <div className=\"form-group mt-2\">\n                    <label htmlFor=\"category\">Category</label>\n                    <select\n                        className=\"form-control mt-1\"\n                        id=\"category\"\n                        onChange={handleChange}\n                        value={post.category}\n                        name=\"category\"\n                    >\n                        <option value=\"General Science\">General Science</option>\n                        <option value=\"Geology\">Geology</option>\n                        <option value=\"Soil Science\">Soil Science</option>\n                        <option value=\"Hydrology\">Hydrology</option>\n                        <option value=\"Mineralogy\">Mineralology</option>\n                        <option value=\"Petrology\">Petrology</option>\n                        <option value=\"Sedimentology\">Sedimentology</option>\n                        <option value=\"Volcanology\">Volcanology</option>\n                        <option value=\"General Tectonics\">General Tectonics</option>\n                    </select>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-goldenrod blogform-btn mt-3\">Submit New Draft</button>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport BlogPostList from \"./BlogPostList/BlogPostList\";\nimport Aside from \"./Aside/Aside\";\nimport BlogForm from \"./BlogForm/BlogForm\";\nimport \"./Main.css\";\n\nexport default function Main(props) {\n    const uniqueCategories = new Set();\n    props.currentBlogs.map((blog) => {\n        uniqueCategories.add(blog.category);\n    });\n\n    function handleClick(e) {\n        props.setFilter(e.target.value);\n    }\n    return (\n        <div>\n            <div className=\"header-category-container container-fluid \">\n                <div className=\"row header-category-row\">\n                <button\n                    className=\"header-category col-md col-sm-4\"\n                    value={null}\n                    onClick={handleClick}\n                >\n                    #Recent\n                </button>\n                {[...uniqueCategories].map((category) => {\n                    return (\n                        <button\n                            className=\"header-category col-md col-sm-4\"\n                            value={category}\n                            onClick={handleClick}\n                        >\n                            #{category}\n                        </button>\n                    );\n                })}\n                </div>\n\n            </div>\n            <div className=\"main-container container\">\n                <div className=\"row gx-5\">\n                    <div className=\"col\">\n                        <BlogPostList\n                            currentBlogs={props.currentBlogs}\n                            filteredBlogs={props.filteredBlogs}\n                            updatePopularityScore={props.updatePopularityScore}\n                            isAuth={props.isAuth}\n                        />\n                    </div>\n                    <div className=\"col\">\n                        <Aside currentBlogs={props.currentBlogs} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport BlogForm from \"../../Main/BlogForm/BlogForm\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Profile.css\"\n\nfunction Profile(props) {\n    const [profile, setProfile] = useState({\n        alias: \"\",\n        avatar: null,\n    });\n    const [preview, setPreview] = useState(\"\");\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        let updatedProfile = { ...profile };\n        updatedProfile[name] = value;\n        setProfile(updatedProfile);\n        console.log(profile);\n    }\n\n    function handleImage(e) {\n        const file = e.target.files[0];\n        setProfile({\n            ...profile,\n            avatar: file,\n        });\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            setPreview(reader.result);\n        };\n        reader.readAsDataURL(file);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"display_name\", profile.alias);\n        formData.append(\"avatar\", profile.avatar);\n\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: formData,\n        };\n        const response = await fetch(\"/api/accounts/profile/\", options);\n\n        if (response.ok === false) {\n            console.log(\"POST FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"Success\");\n            console.log(data);\n        }\n    }\n\n    return (\n        <div className=\"profile-container text-center row\">\n            <div className=\"profile-details-container\">\n                <h2 className=\"profile-details-heading\">Profile:</h2>\n                <h3 className=\"profile-details-subheading mt-3\">Username: </h3>\n                <p>{props.userDetails.username}</p>\n                <h3 className=\"profile-details-subheading\">Email: </h3>\n                <p>{props.userDetails.email}</p>\n            </div>\n\n            <div>\n                <NavLink to=\"/account/blogs/create\">\n                    <button className=\"btn btn-primary profile-btn btn-goldenrod\">\n                        Submit New Blog!\n                    </button>\n                </NavLink>\n                <NavLink to=\"/account/blogs/drafts\">\n                    <button className=\"btn btn-primary profile-btn btn-goldenrod mt-2\">My Blogs</button>\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport Cookies from 'js-cookie'\nimport {withRouter,Redirect} from 'react-router-dom'\nimport \"./Registration.css\"\n\nexport default function Registration(props) {\n    const [user, setUser] = useState({\n        username: \"\",\n        email: \"\",\n        password1: \"\",\n        password2: \"\",\n    });\n\n    const [error, setError] = useState(null);\n\n    function handleChange(e) {\n        let updatedUser = {\n            ...user,\n        };\n        updatedUser[e.target.id] = e.target.value;\n        setUser(updatedUser);\n    }\n\n   async function handleSubmit(e) {\n        e.preventDefault();\n        if (user.password1 !== user.password2) {\n            setError(true)\n        } else {\n            const options = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': \"application/json\",\n                    'X-CSRFToken': Cookies.get('csrftoken')\n                },\n                body: JSON.stringify(user)\n            }\n           const response = await fetch(\"/rest-auth/registration/\", options)\n                if (response.ok === false) {\n                    const data = await response.json()\n                    if (data.username) {\n                        data.username.map(element => console.log(element))\n                    }\n                    if(data.email) {\n                        data.email.map(element => console.log(element))\n                    }\n                    if (data.password1) {\n                        data.password1.map(element => console.log(element))\n                    }\n                } else {\n                    const data = await response.json();\n                    Cookies.set(\"Authorization\", `Token: ${data.key}`)\n                    props.setIsAuth(true)\n                }\n            }\n        }\n\n    if (props.isAuth) {\n        return <Redirect to=\"/profile\"/>\n    }\n\n    return (\n        <div className=\"registration-container\">\n            <form onSubmit={handleSubmit}>\n            <h2 className=\"registration-heading\">Register:</h2>\n                <div className=\"form-group mt-4\">\n                    <label htmlFor=\"username\">Username:</label>\n                    <input\n                        id=\"username\"\n                        className=\"form-control mt-2\"\n                        type=\"text\"\n                        placeholder=\"Enter Username..\"\n                        onChange={handleChange}\n                        value={user.username}\n                    />\n                </div>\n                <div className=\"form-group mt-3\">\n                    <label htmlFor=\"email\">Email:</label>\n                    <input\n                        id=\"email\"\n                        className=\"form-control mt-2\"\n                        type=\"email\"\n                        placeholder=\"Enter Email...\"\n                        onChange={handleChange}\n                        value={user.email}\n                    />\n                </div>\n                <div className=\"form-group mt-3\">\n                    <label htmlFor=\"password1\">Password:</label>\n                    <input\n                        id=\"password1\"\n                        className=\"form-control mt-2\"\n                        type=\"password\"\n                        placeholder=\"Enter Password...\"\n                        onChange={handleChange}\n                        value={user.password1}\n                    />\n                </div>\n                <div className=\"form-group mt-3\">\n                    <label htmlFor=\"password2\">Confirm Password:</label>\n                    <input\n                        id=\"password2\"\n                        className=\"form-control mt-2\"\n                        type=\"password\"\n                        placeholder=\"Enter Password...\"\n                        onChange={handleChange}\n                        value={user.password2}\n                    />\n                    {error && (\n                        <span className=\"text-danger\">\n                            Passwords do not match\n                        </span>\n                    )}\n                    \n                </div>\n                <button type='submit' className=\"btn btn-success btn-goldenrod mt-4\">Register</button>\n            </form>\n        </div>\n    );\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport Cookies from 'js-cookie'\nimport { Redirect, withRouter } from 'react-router'\nimport \"./Login.css\"\n\nfunction Login(props) {\n\n    const [user, setUser] = useState({\n        username: \"\",\n        password: \"\"\n    })\n\n    function handleChange(e) {\n        let updatedUser = {...user, \n        }\n        updatedUser[e.target.id] = e.target.value\n        setUser(updatedUser)\n    }\n\n   async function handleSubmit(e) {\n        e.preventDefault()\n        const options = {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify(user)\n        }\n        const response = await fetch(\"/rest-auth/login/\", options)\n        if (response.ok === false) {\n            const data = await response.json()\n        } else {\n            const data = await response.json()\n            Cookies.set(\"Authorization\", `Token ${data.key}`)\n            props.setIsAuth(true);\n        }\n    }\n\n    if (props.isAuth) {\n        return <Redirect to=\"/\"/>\n    }\n\n    return (\n        <div className=\"login-container\">\n            <form onSubmit={handleSubmit}>\n                <h2 className=\"login-heading\">Login:</h2>\n                <div className=\"form-group mt-3\">\n                <label htmlFor=\"username\">Username:</label>\n                    <input value={user.username} className=\"form-control mt-1\" type=\"text\" id=\"username\" onChange={handleChange} placeholder=\"Enter Username..\" />\n                </div>\n                <div className=\"form-group mt-2\">\n                <label htmlFor=\"password\">Password:</label>\n                    <input value={user.password} className=\"form-control mt-1\" type=\"password\" id=\"password\" onChange={handleChange} placeholder=\"Enter Password..\" />\n                </div>\n                <button type='submit' className=\"btn btn-primary mt-3 login-btn btn-goldenrod\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { useState, useEffect } from \"react\";\nimport \"./BlogDetailReadOnly.css\";\n\nfunction BlogDetailReadOnly(props) {\n\n    const [blogObj, setBlogObj] = useState({\n        id: null,\n        author: \"\",\n        title: \"\",\n        body: \"\",\n        category: \"\",\n        image: \"\",\n        status: \"\",\n    })\n\n\n    const blogID = props.match.params.id;\n\n    useEffect(() => {\n        getBlogDetail();\n    }, []);\n\n    async function getBlogDetail() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/articles/${blogID}/`, options);\n        if (response.ok === false) {\n            console.log(\"Detail Failed\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"success\", data);\n            setBlogObj({\n                id: data.id,\n                author: data.author,\n                title: data.title,\n                body: data.body,\n                category: data.category,\n                image: data.image,\n                status: data.status,\n            })\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"blog-detail-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={blogObj.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{blogObj.category}</p>\n                        <h2 className=\"blog-card-title\">{blogObj.title}</h2>\n                        <p>{blogObj.body}</p>\n                        <p className=\"blog-card-author\">Author:{blogObj.author}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(BlogDetailReadOnly);\n","import React from \"react\";\n\nimport {withRouter, Redirect } from \"react-router-dom\";\nimport Cookies from 'js-cookie'\n\nfunction AdminBlogSubmitPost(props) {\n\n\n    async function handleRejectClick() {\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            status: 'RJT'\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/admin/ALL/${props.id}/`, options)\n        if (response.ok === false) {\n            console.log(\"REJECTED FAILED\", response);\n        } else {\n            const data = await response.json()\n            console.log(\"SUCCESS REJECTED\", data);\n            props.removeBlog(props.id, props.adminArticles, props.setAdminArticles);\n        }\n    }\n\n    async function handlePublishClick() {\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            status: 'PBLH'\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/admin/ALL/${props.id}/`, options)\n        if (response.ok === false) {\n            console.log(\"PUBLISHED FAILED\", response);\n        } else {\n            const data = await response.json()\n            console.log(\"SUCCESS PUBLISHED\", data);\n            props.removeBlog(props.id, props.adminArticles, props.setAdminArticles);\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"ownblog-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={props.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{props.category}</p>\n                        <h2 className=\"blog-card-title\">{props.title}</h2>\n                        <p className=\"blog-card-author\">{props.author}</p>\n                    </div>\n                    <div className=\"ownblog-edit-btn-container\">\n                      <button className=\"btn btn-danger ownblog-btn\" onClick={handleRejectClick}>Reject</button>\n                        <button className=\"btn btn-success ownblog-btn\" onClick={handlePublishClick}>\n                            Publish\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(AdminBlogSubmitPost)","import React from \"react\";\n\nimport {withRouter, Redirect } from \"react-router-dom\";\nimport Cookies from 'js-cookie'\n\nfunction AdminBlogRejectPost(props) {\n\n    async function handleRejectClick() {\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            status: 'SBMT'\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/admin/ALL/${props.id}/`, options)\n        if (response.ok === false) {\n            console.log(\"REJECTED FAILED\", response);\n        } else {\n            const data = await response.json()\n            console.log(\"SUCCESS REJECTED\", data);\n            props.removeBlog(props.id, props.adminArticles, props.setAdminArticles);\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"ownblog-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={props.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{props.category}</p>\n                        <h2 className=\"blog-card-title\">{props.title}</h2>\n                        <p className=\"blog-card-author\">{props.author}</p>\n                    </div>\n                    <div className=\"ownblog-edit-btn-container\">\n                      <button className=\"btn btn-danger ownblog-btn\" onClick={handleRejectClick}>Reverse Rejection</button>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(AdminBlogRejectPost)","import React from \"react\";\nimport {withRouter, Redirect } from \"react-router-dom\";\nimport Cookies from 'js-cookie'\n\nfunction AdminBlogPublishPost(props) {\n\n    async function handlePublishClick() {\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            status: 'SBMT'\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/admin/ALL/${props.id}/`, options)\n        if (response.ok === false) {\n        } else {\n            const data = await response.json()\n            props.removeBlog(props.id, props.adminArticles, props.setAdminArticles);\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"ownblog-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={props.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{props.category}</p>\n                        <h2 className=\"blog-card-title\">{props.title}</h2>\n                        <p className=\"blog-card-author\">{props.author}</p>\n                    </div>\n                    <div className=\"ownblog-edit-btn-container\">\n                      <button className=\"btn btn-danger ownblog-btn\" onClick={handlePublishClick}>Reverse Publication</button>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(AdminBlogPublishPost)","import Cookies from \"js-cookie\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport AdminBlogSubmitPost from \"./AdminBlogSubmitPost/AdminBlogSubmitPost\";\nimport AdminBlogRejectPost from \"./AdminBlogRejectPost/AdminBlogRejectPost\";\nimport AdminBlogPublishPost from \"./AdminBlogPublishPost/AdminBlogPublishPost\";\nimport BlogPost from \"../../Main/BlogPostList/BlogPost/BlogPost\";\nimport \"./AdminBlogList.css\";\n\nexport default function AdminBlogList(props) {\n    const [adminArticles, setAdminArticles] = useState([]);\n    const [categorySelection, setCategorySelection] = useState(\"ALL\");\n\n\n\n    useEffect(() => {\n        grabAdminArticles(categorySelection);\n    }, [, categorySelection]);\n\n    async function grabAdminArticles(category = \"ALL\") {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/articles/admin/${category}`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"FAILED\", response);\n        } else {\n            const data = await response.json();\n            setAdminArticles(data);\n        }\n    }\n\n   function handleOptionChange(e) {\n        setCategorySelection(e.target.value);\n    }\n    \n    let html;\n    if (categorySelection == \"SBMT\") {\n        html = adminArticles.map((blog) => {\n            return <AdminBlogSubmitPost {...blog} removeBlog={props.removeBlog} adminArticles={adminArticles} setAdminArticles={setAdminArticles}/>\n        })\n    } else if (categorySelection == \"ALL\" || categorySelection == \"DFT\") {\n        html = adminArticles.map((blog) => {\n            return <BlogPost {...blog} />\n        })\n    } else if (categorySelection == \"RJT\") {\n        html = adminArticles.map((blog) => {\n            return <AdminBlogRejectPost {...blog} removeBlog={props.removeBlog} adminArticles={adminArticles} setAdminArticles={setAdminArticles} />\n        })\n    } else if (categorySelection == \"PBLH\") {\n        html = adminArticles.map((blog) => {\n            return <AdminBlogPublishPost {...blog} removeBlog={props.removeBlog} adminArticles={adminArticles} setAdminArticles={setAdminArticles}/>\n        })\n    }\n\n\n    return (\n        <div className=\"admin-blog-list-container\">\n            <form className=\"form-control\">\n                <div className=\"form-group\">\n                    <label HTMLfor=\"status\">Filter Blogs by Status:</label>\n\n                    <select\n                        id=\"status\"\n                        className=\"form-select\"\n                        onChange={handleOptionChange}\n                        value={categorySelection}\n                    >\n                        <option value=\"ALL\" selected>\n                            All\n                        </option>\n                        <option value=\"DFT\">Draft</option>\n                        <option value=\"SBMT\">Submitted</option>\n                        <option value=\"PBLH\">Published</option>\n                        <option value=\"RJT\">Rejected</option>\n                    </select>\n                </div>\n            </form>\n\n            <div className=\"ownblogs-list-container\">{html}</div>\n        </div>\n    );\n}\n","import \"./App.css\";\nimport Cookies, { remove } from \"js-cookie\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport UserBlogList from \"./components/User/UserBlogList/UserBlogList\";\nimport UserBlogEditDetail from \"./components/User/UserBlogEditDetail/UserBlogEditDetail\";\nimport Main from \"./components/Main/Main\";\nimport Profile from \"./components/User/Profile/Profile\";\nimport Registration from \"./components/User/Registration/Registration\";\nimport Login from \"./components/User/Login/Login\";\nimport BlogForm from \"./components/Main/BlogForm/BlogForm\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Switch, withRoute, useHistory } from \"react-router-dom\";\nimport BlogDetailReadOnly from \"./components/Main/BlogDetail/BlogDetailReadOnly\";\nimport AdminBlogList from \"./components/User/AdminBlogList/AdminBlogList\";\n\nfunction App() {\n    const [isAuth, setIsAuth] = useState(false);\n    const [currentBlogs, setCurrentBlogs] = useState([]);\n    const history = useHistory();\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [filter, setFilter] = useState(null);\n    const [userDetails, setUserDetails] = useState({\n        username: \"\",\n        email: \"\",\n    })\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            const response = await fetch(\"/rest-auth/user/\");\n            if (response.ok === false) {\n                setIsAuth(false);\n            } else {\n                setIsAuth(true);\n            }\n        };\n        checkAuth();\n    }, []);\n\n    useEffect(() => {\n        grabBlogs();\n    }, []);\n\n    useEffect(() => {\n        grabUserDetails();\n    }, [isAuth]);\n\n    async function grabBlogs() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"/api/articles/\", options);\n        const data = await response.json();\n        if (response.ok === false) {\n        } else {\n            setCurrentBlogs(data);\n        }\n    }\n\n    async function grabUserDetails() {\n        let options = {\n            method: \"GET\",\n            header: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": \"csrftoken\",\n            },\n        };\n        let response = await fetch(\"/rest-auth/user/\", options);\n        if (response.ok === false) {\n            console.log(\"FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"success grabbing details\", data);\n            setUserDetails({\n                \"username\": data.username,\n                \"email\": data.email\n            })\n            if (data.is_staff === true || data.is_superuser === true) {\n                setIsAdmin(true);\n            }\n        }\n    }\n\n    function filteredBlogs() {\n        if (filter && filter !== \"All\") {\n            return currentBlogs.filter((blog) => blog.category === filter);\n        } else {\n            return currentBlogs;\n        }\n    }\n\n    function removeBlog(id, arr, func) {\n       let index = arr.findIndex((element) => element.id === id);\n       let updatedArr = [...arr]\n       updatedArr.splice(index, 1)\n       func(updatedArr)\n    }\n\n    async function updatePopularityScore(id, props) {\n\n        let newPopularityScore = props.popularity_score + 1\n\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            popularity_score: newPopularityScore\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/${id}/`, options)\n        if (response.ok === false) {\n            console.log(\"POP SCORE UPDATE FAIL\")\n        } else {\n            const data = await response.json()\n        }\n    }\n\n    return (\n        <>\n            <Header\n                currentBlogs={currentBlogs}\n                isAuth={isAuth}\n                setFilter={setFilter}\n                setIsAuth={setIsAuth}\n                isAdmin={isAdmin}\n                setIsAdmin={setIsAdmin}\n            />\n            <Switch>\n                <Route path=\"/registration\">\n                    <Registration isAuth={isAuth} setIsAuth={setIsAuth} />\n                </Route>\n                <Route path=\"/profile\">\n                    <Profile userDetails={userDetails}/>\n                </Route>\n                <Route path=\"/admin/portal\">\n                    <AdminBlogList removeBlog={removeBlog} />\n                </Route>\n                <Route path=\"/account/blogs/create\">\n                    <BlogForm />\n                </Route>\n                <Route path=\"/account/blogs/drafts\">\n                    <UserBlogList removeBlog={removeBlog}/>\n                </Route>\n                <Route path=\"/login\">\n                    <Login isAuth={isAuth} setIsAuth={setIsAuth}/>\n                </Route>\n                <Route path=\"/logout\">\n                    <Login isAuth={isAuth} setIsAuth={setIsAuth} />\n                </Route>\n                <Route path=\"/blogs/detail/:id\">\n                    <BlogDetailReadOnly />\n                </Route>\n                <Route path=\"/account/blogs/detail/:id\">\n                    <UserBlogEditDetail/>\n                </Route>\n                <Route path=\"/\">\n                    <Main\n                        setFilter={setFilter}\n                        filteredBlogs={filteredBlogs}\n                        currentBlogs={currentBlogs}\n                        updatePopularityScore={updatePopularityScore}\n                        isAuth={isAuth}\n                    />\n                </Route>\n            </Switch>\n            <Footer />\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"bootstrap/dist/js/bootstrap.bundle\"\nimport \"bootstrap/dist/js/bootstrap\"\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}