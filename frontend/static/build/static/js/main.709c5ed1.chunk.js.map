{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/User/UserBlogList/UserBlogPost/UserBlogPost.js","components/User/UserBlogList/UserBlogList.js","components/User/UserBlogEditDetail/UserBlogEditDetail.js","components/Main/BlogPostList/BlogPost/BlogPost.js","components/Main/BlogPostList/BlogPostList.js","components/Main/Aside/AsideItem/AsideItem.js","components/Main/Aside/Aside.js","components/Main/BlogForm/BlogForm.js","components/Main/Main.js","components/User/Profile/Profile.js","components/User/Registration/Registration.js","components/User/Login/Login.js","components/Main/BlogDetail/BlogDetailReadOnly.js","components/User/AdminBlogList/AdminBlogSubmitPost/AdminBlogSubmitPost.js","components/User/AdminBlogList/AdminBlogRejectPost/AdminBlogRejectPost.js","components/User/AdminBlogList/AdminBlogPublishPost/AdminBlogPublishPost.js","components/User/AdminBlogList/AdminBlogList.js","App.js","index.js"],"names":["Header","props","month_string","loginRegisterLink","logoutLink","profileLink","adminLink","currentDate","Date","getMonth","getDate","getFullYear","day","year","a","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","console","log","json","remove","setIsAuth","isAuth","className","onClick","to","isAdmin","id","style","Footer","withRouter","updatedObj","title","category","status","ok","data","src","image","alt","author","history","push","submitForReview","UserBlogList","useState","OwnBlogsState","setOwnBlogsState","useEffect","grabOwnBlogs","length","map","blog","blogObj","setBlogObj","useHistory","blogID","match","params","handleChange","e","updatedBlogObj","target","value","preventDefault","formData","FormData","append","getBlogDetail","onSubmit","htmlFor","type","placeholder","onChange","name","file","files","FileReader","readAsDataURL","BlogPost","BlogPostList","currentBlogs","filteredBlogs","AsideItem","Aside","sortedBlogs","sort","b","popularity_score","BlogForm","post","setPost","setPreview","updatedPost","alert","reader","onloadend","result","Main","uniqueCategories","Set","handleClick","setFilter","innerHTML","add","Profile","alias","avatar","userDetails","username","email","Registration","password1","password2","user","setUser","error","setError","updatedUser","element","set","key","Login","password","AdminBlogList","html","adminArticles","setAdminArtcles","categorySelection","setCategorySelection","grabAdminArticles","HTMLfor","selected","App","setCurrentBlogs","setIsAdmin","filter","setUserDetails","header","is_staff","is_superuser","checkAuth","grabBlogs","grabUserDetails","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.709c5ed1.chunk.js","sourcesContent":["import \"./Header.css\";\nimport React from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nexport default function Header(props) {\n    const currentDate = new Date();\n    const [month, day, year] = [\n        currentDate.getMonth(),\n        currentDate.getDate(),\n        currentDate.getFullYear(),\n    ];\n\n\n\n\n    async function handleLogout (){\n         const options = {\n             method: 'POST',\n             headers: {\n                 'Content-Type': 'application/json',\n                 'X-CSRFToken': Cookies.get('csrftoken'),\n             },\n             body: JSON.stringify({}),\n         };\n         const response = await fetch('/rest-auth/logout/', options)\n         if(!response){\n             console.log(response);\n         } else {\n             console.log(response)\n             const data = await response.json();\n             Cookies.remove('Authorization');\n            props.setIsAuth(false)\n            \n         }\n        }\n\n\n\n\n\n    let month_string;\n    switch (month + 1) {\n        case 1:\n            month_string = \"January\";\n            break;\n        case 2:\n            month_string = \"February\";\n            break;\n        case 3:\n            month_string = \"March\";\n            break;\n        case 4:\n            month_string = \"April\";\n            break;\n        case 5:\n            month_string = \"May\";\n            break;\n        case 6:\n            month_string = \"June\";\n            break;\n        case 7:\n            month_string = \"July\";\n            break;\n        case 8:\n            month_string = \"August\";\n            break;\n        case 9:\n            month_string = \"September\";\n            break;\n        case 10:\n            month_string = \"October\";\n            break;\n        case 11:\n            month_string = \"November\";\n            break;\n        case 12:\n            month_string = \"December\";\n            break;\n    }\n\n    let loginRegisterLink;\n    let logoutLink;\n    let profileLink;\n    let adminLink;\n\n    if (props.isAuth === true) {\n\n        logoutLink =  <li className=\"nav-item\" onClick={handleLogout}>\n                <NavLink\n                    className=\"nav-link\"\n                    to=\"/logout\"\n                >\n                    Logout\n                </NavLink>\n            </li>\n\n        if (props.isAdmin === true) {\n            adminLink = (\n                <>\n                    <li className=\"nav-item\">\n                        <NavLink\n                            className=\"nav-link\"\n                            to=\"/admin/portal\"\n                        >\n                            Admin Portal\n                        </NavLink>\n                    </li>\n                </>\n            );\n        } else {\n            profileLink = (\n                <li className=\"nav-item\" >\n                    <NavLink\n                        className=\"nav-link\"\n                        to=\"/profile\"\n                    >\n                        Profile\n                    </NavLink>\n                </li>\n            );\n        }\n    } else {\n        loginRegisterLink = (\n            <>\n                <li className=\"nav-item\" >\n                    <NavLink\n                        className=\"nav-link\"\n                        to=\"/login\"\n                    >\n                        Login\n                    </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink\n                        className=\"nav-link\"\n                        to=\"/registration\"\n                    >\n                        Registration\n                    </NavLink>\n                </li>\n            </>\n        );\n    }\n\n    return (\n        <div className=\"header-container\">\n            <h1 className=\"newspaper-name\">The Gartholomew Gazette</h1>\n            <h2 className=\"header-date\">\n                {month_string}, {day} {year}{\" \"}\n            </h2>\n            <div className=\"collpase navbar-collapse \" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav nav-container\">\n                    <li className=\"nav-item\">\n                        <NavLink\n                            className=\"nav-link\"\n                            style=\"\"\n                            to=\"/\"\n                        >\n                            Home\n                        </NavLink>\n                    </li>\n                    {profileLink}\n                    {loginRegisterLink}\n                    {adminLink}\n                    {logoutLink}\n                </ul>\n            </div>\n\n        </div>\n    );\n}\n","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport \"./UserBlogPost.css\";\nimport {withRouter } from \"react-router-dom\";\nimport Cookies from 'js-cookie'\n\nfunction UserBlogPost(props) {\n\n    async function submitForReview() {\n\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            status: 'SBMT'\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/mydrafts/${props.id}`, options)\n        if (response.ok === false) {\n            console.log(\"SUBMIT FOR REVIEW FAILED\", response);\n        } else {\n            const data = await response.json()\n            console.log(\"Success for submit for review\", data);\n        }\n    }\n\n    function handleEditClick() {\n        console.log(\"hey\")\n        props.history.push(`/account/blogs/detail/${props.id}`)\n    }\n\n    function handleFinalSubmit() {\n        submitForReview()\n        props.history.push('/account/blogs/drafts/')\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"ownblog-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={props.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{props.category}</p>\n                        <h2 className=\"blog-card-title\">{props.title}</h2>\n                        <p className=\"blog-card-author\">{props.author}</p>\n                    </div>\n                    <div className=\"ownblog-edit-btn-container\">\n                      <button className=\"btn btn-warning ownblog-btn\" onClick={handleEditClick}>Edit</button>\n                        <button className=\"btn btn-success ownblog-btn\" onClick={handleFinalSubmit}>\n                            Final Submit\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(UserBlogPost)\n","import Cookies from 'js-cookie'\nimport React from 'react'\nimport { useState, useEffect } from 'react'\nimport UserBlogPost from './UserBlogPost/UserBlogPost'\nimport './UserBlogList.css'\n\nexport default function UserBlogList() {\n\nconst [OwnBlogsState, setOwnBlogsState] = useState([])\n\nuseEffect(() => {\n    grabOwnBlogs()\n}, [])\n\nasync function grabOwnBlogs(){\n    const options = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    }\n    const response = await fetch(\"/api/articles/mydrafts/\", options)\n    if (response.ok === false) {\n        console.log(\"FAILED\", response)\n    } else {\n        const data = await response.json()\n        setOwnBlogsState(data)\n    }\n}\n\nif (OwnBlogsState.length === 0) {\n    return <h1 className=\"no-current-drafts-heading\">No Current Drafts</h1>\n}\n\n\n    return (\n        <div className=\"ownblogs-list-container\">\n            {OwnBlogsState.map(blog => {\n                return <UserBlogPost {...blog} />\n            })}\n        </div>\n    )\n}\n","import React from \"react\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { useState, useEffect } from \"react\";\nimport \"./UserBlogEditDetail.css\";\nimport { FiEdit3 } from \"react-icons/fi\";\n\nfunction UserBlogPostDetail(props) {\n\n    const [blogObj, setBlogObj] = useState({\n        id: null,\n        author: \"\",\n        title: \"\",\n        body: \"\",\n        category: \"\",\n        image: \"\",\n        status: \"\",\n    });\n\n    const history = useHistory();\n    const blogID = props.match.params.id;\n\n    useEffect(() => {\n        getBlogDetail();\n    }, []);\n\n    async function getBlogDetail() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/articles/mydrafts/${blogID}`, options);\n        if (response.ok === false) {\n            console.log(\"Detail Failed\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"success\", data);\n            setBlogObj({\n                id: data.id,\n                author: data.author,\n                title: data.title,\n                body: data.body,\n                image: \"\",\n                category: data.category,\n                status: data.status,\n            });\n        }\n    }\n\n    function handleChange(e) {\n        let updatedBlogObj = {...blogObj}\n        updatedBlogObj[e.target.id] = e.target.value;\n        setBlogObj(updatedBlogObj)\n        console.log(blogObj.image)\n    }\n\n    function handleImage(e) {\n        const file = e.target.files[0]\n        let updatedBlogObj = {...blogObj}\n        updatedBlogObj[e.target.id] = file\n\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n    }\n\n\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        const formData = new FormData ();\n        formData.append('id', blogObj.id)\n        formData.append('author', blogObj.author)\n        formData.append('title', blogObj.title)\n        formData.append('body', blogObj.body)\n        formData.append('category', blogObj.category)\n        formData.append('status', blogObj.status)\n\n        if (blogObj.image !== \"\") {\n            formData.append('image', blogObj.image)\n        }\n\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: formData,\n        }\n        const response = await fetch(`/api/articles/mydrafts/${blogID}/`, options)\n        if (response.ok === false) {\n            console.log(\"EDIT POST FAILED\", response)\n        } else {\n            const data = await response.json()\n            console.log(\"EDIT SUCCESS\", data)\n            history.push(\"/account/blogs/drafts\")\n        }\n    }\n\n    return (\n        <div className=\"edit-post-form-container\">\n            <form className=\"form-control\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        id=\"title\"\n                        placeholder=\"Enter Title..\"\n                        onChange={handleChange}\n                        value={blogObj.title}\n                        name=\"title\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"body\">Body</label>\n                    <textarea\n                        className=\"form-control\"\n                        id=\"body\"\n                        placeholder=\"Enter Body..\"\n                        onChange={handleChange}\n                        value={blogObj.body}\n                        name=\"body\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"image\">Image</label>\n                    <input\n                        className=\"form-control\"\n                        type=\"file\"\n                        id=\"image\"\n                        onChange={handleImage}\n                        name=\"image\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"category\">Category</label>\n                    <select\n                        className=\"form-control\"\n                        id=\"category\"\n                        onChange={handleChange}\n                        value={blogObj.category}\n                        name=\"category\"\n                    >\n                        <option value=\"General Science\">General Science</option>\n                        <option value=\"Geology\">Geology</option>\n                        <option value=\"Soil Science\">Soil Science</option>\n                        <option value=\"Hydrology\">Hydrology</option>\n                        <option value=\"Mineralogy\">Mineralology</option>\n                        <option value=\"Petrology\">Petrology</option>\n                        <option value=\"Sedimentology\">Sedimentology</option>\n                        <option value=\"Volcanology\">Volcanology</option>\n                        <option value=\"General Tectonics\">\n                            General Tectonics\n                        </option>\n                    </select>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit New Draft\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default withRouter(UserBlogPostDetail);\n","import React from \"react\";\nimport \"./BlogPost.css\";\nimport { useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { NavLink } from 'react-router-dom'\n\nexport default function BlogPost(props) {\n\n    return (\n        <div>\n            <NavLink to={`/blogs/detail/${props.id}`} className=\"nav-link-container\">\n                <div className=\"blog-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={props.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{props.category}</p>\n                        <h2 className=\"blog-card-title\">{props.title}</h2>\n                        <p className=\"blog-card-author\">{props.author}</p>\n                    </div>\n                </div>\n            </NavLink>\n        </div>\n    );\n}\n","import React from 'react'\nimport BlogPost from './BlogPost/BlogPost'\nimport \"./BlogPostList.css\"\n\nexport default function BlogPostList(props) {\n\n    let currentBlogs = props.filteredBlogs()\n    console.log(currentBlogs)\n    return (\n        <div className=\"blog-post-list-container\">\n            {currentBlogs.map(blog => {\n                return <BlogPost {...blog} />\n            })}\n        </div>\n    )\n}\n","import React from \"react\";\nimport \"./AsideItem.css\"\n\nexport default function AsideItem(props) {\n    return (\n        <div className=\"aside-item-container\">\n            <div className=\"aside-item-img-container\">\n                <img\n                    className=\"aside-item-img\"\n                    src={props.image}\n                    alt=\"\"\n                />\n            </div>\n            <div className=\"aside-item-text-container\">\n                <p className=\"aside-item-category\">{props.category}</p>\n                <h2 className=\"aside-item-title\">\n                    {props.title}\n                </h2>\n                <p className=\"aside-item-author\">{props.author}</p>\n            </div>\n        </div>\n    );\n}\n","\nimport React from 'react'\nimport \"./Aside.css\"\nimport AsideItem from \"./AsideItem/AsideItem\"\n\nexport default function Aside(props) {\n\n    let sortedBlogs = [...props.currentBlogs].sort((a,b) => {\n        if ( a.popularity_score > b.popularity_score ){\n            return -1;\n          }\n          if ( a.popularity_score < b.popularity_score){\n            return 1;\n          }\n          return 0;\n        }\n    )\n\n    return (\n        <div>\n            <div className=\"aside-container\">\n                <h2 className=\"aside-heading\">Popular Posts</h2>\n                {sortedBlogs.map(blog => {\n                    return <AsideItem {...blog}/> \n                })}\n            </div>\n        </div>\n    )\n}\n","import Cookies from \"js-cookie\";\nimport React from \"react\";\nimport { useState } from 'react'\n\nexport default function BlogForm() {\n\n    const [post, setPost] = useState({\n        title: \"\",\n        body: \"\",\n        image: null,\n        category: \"General Science\",\n    })\n\n    const [preview, setPreview] = useState()\n\n    function handleChange(e) {\n        let updatedPost = {\n            ...post,\n        }\n        updatedPost[e.target.id] = e.target.value;\n        setPost(updatedPost)\n        console.log(post)\n    }\n    \n    function handleImage(e) {\n        let updatedPost = {\n            ...post\n        }\n        const file = e.target.files[0];\n        updatedPost['image'] = file;\n        setPost(updatedPost)\n\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            setPreview(reader.result);\n        }\n        reader.readAsDataURL(file);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        alert('hey');\n        const formData = new FormData();\n        formData.append('title', post.title)\n        formData.append('body', post.body)\n        formData.append('image', post.image)\n        formData.append('category', post.category)\n\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get('csrftoken')\n            },\n            body: formData\n        }\n        const response = await fetch(\"/api/articles/\", options)\n        const data = await response.json()\n        if (response.ok === false) {\n            console.log(\"r\", response);\n            console.log('d', data);\n        } else {\n            console.log('SUCCESS', data)\n            setPost(() => ({\n                title: \"\",\n                body: \"\",\n                image: null,\n                category: \"General Science\",\n            }))\n        }\n    }\n\n    return (\n        <div>\n            <form className=\"form-control\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        id=\"title\"\n                        placeholder=\"Enter Title..\"\n                        onChange={handleChange}\n                        value={post.title}\n                        name=\"title\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"body\">Body</label>\n                    <textarea\n                        className=\"form-control\"\n                        id=\"body\"\n                        placeholder=\"Enter Body..\"\n                        onChange={handleChange}\n                        value={post.body}\n                        name=\"body\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"image\">Image</label>\n                    <input\n                        className=\"form-control\"\n                        type=\"file\"\n                        id=\"image\"\n                        onChange={handleImage}\n                        name=\"image\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"category\">Category</label>\n                    <select\n                        className=\"form-control\"\n                        id=\"category\"\n                        onChange={handleChange}\n                        value={post.category}\n                        name=\"category\"\n                    >\n                        <option value=\"General Science\">General Science</option>\n                        <option value=\"Geology\">Geology</option>\n                        <option value=\"Soil Science\">Soil Science</option>\n                        <option value=\"Hydrology\">Hydrology</option>\n                        <option value=\"Mineralogy\">Mineralology</option>\n                        <option value=\"Petrology\">Petrology</option>\n                        <option value=\"Sedimentology\">Sedimentology</option>\n                        <option value=\"Volcanology\">Volcanology</option>\n                        <option value=\"General Tectonics\">General Tectonics</option>\n                    </select>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit New Draft</button>\n            </form>\n        </div>\n    );\n}\n","import React from 'react'\nimport BlogPostList from './BlogPostList/BlogPostList'\nimport Aside from './Aside/Aside'\nimport BlogForm from \"./BlogForm/BlogForm\"\nimport \"./Main.css\"\n\nexport default function Main(props) {\n\n\n    const uniqueCategories = new Set();\n    props.currentBlogs.map((blog) => {\n        uniqueCategories.add(blog.category);\n    });\n\n    function handleClick(e) {\n        props.setFilter(e.target.innerHTML);\n    } \n    return (\n        <div>\n                        <div className=\"header-category-container\">\n                <a\n                    className=\"header-category\"\n                    value={null}\n                    onClick={handleClick}\n                >\n                    All\n                </a>\n                {[...uniqueCategories].map((category) => {\n                    return (\n                        <a\n                            className=\"header-category\"\n                            value={category}\n                            onClick={handleClick}\n                        >\n                            {category}\n                        </a>\n                    );\n                })}\n            </div>\n            <div className=\"main-container\">\n            <BlogPostList currentBlogs={props.currentBlogs} filteredBlogs={props.filteredBlogs}/>\n            <Aside currentBlogs={props.currentBlogs}/>\n        </div>\n        </div>\n\n    )\n}\n","import { useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport BlogForm from \"../../Main/BlogForm/BlogForm\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Profile.css\"\n\nfunction Profile(props) {\n    const [profile, setProfile] = useState({\n        alias: \"\",\n        avatar: null,\n    });\n    const [preview, setPreview] = useState(\"\");\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        let updatedProfile = { ...profile };\n        updatedProfile[name] = value;\n        setProfile(updatedProfile);\n        console.log(profile);\n    }\n\n    function handleImage(e) {\n        const file = e.target.files[0];\n        setProfile({\n            ...profile,\n            avatar: file,\n        });\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            setPreview(reader.result);\n        };\n        reader.readAsDataURL(file);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"display_name\", profile.alias);\n        formData.append(\"avatar\", profile.avatar);\n\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: formData,\n        };\n        const response = await fetch(\"/api/accounts/profile/\", options);\n\n        if (response.ok === false) {\n            console.log(\"POST FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"Success\");\n            console.log(data);\n        }\n    }\n\n    return (\n        <div className=\"profile-container text-center row\">\n            {/* <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"alias\">Display Name:</label>\n                    <input\n                        id=\"alias\"\n                        type=\"text\"\n                        value={profile.alias}\n                        name=\"alias\"\n                        onChange={handleChange}\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"avatar\">Choose your avatar: </label>\n                    <input\n                        id=\"avatar\"\n                        type=\"file\"\n                        name=\"avatar\"\n                        onChange={handleImage}\n                    />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-success mt-3\">\n                    Save profile\n                </button>\n\n            </form> */}\n            <div className=\"profile-details-container\">\n                <h2 className=\"profile-details-heading\">PROFILE</h2>\n                <h3 className=\"profile-details-subheading\">Username: </h3>\n                <p>{props.userDetails.username}</p>\n                <h3 className=\"profile-details-subheading\">Email: </h3>\n                <p>{props.userDetails.email}</p>\n            </div>\n\n            <div>\n                <NavLink to=\"/account/blogs/create\">\n                    <button className=\"btn btn-primary profile-btn\">\n                        Blog Submit Form\n                    </button>\n                </NavLink>\n                <NavLink to=\"/account/blogs/drafts\">\n                    <button className=\"btn btn-primary profile-btn\">See My Drafts</button>\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport Cookies from 'js-cookie'\nimport {withRouter,Redirect} from 'react-router-dom'\n\nexport default function Registration(props) {\n    const [user, setUser] = useState({\n        username: \"\",\n        email: \"\",\n        password1: \"\",\n        password2: \"\",\n    });\n\n    const [error, setError] = useState(null);\n\n    function handleChange(e) {\n        let updatedUser = {\n            ...user,\n        };\n        updatedUser[e.target.id] = e.target.value;\n        setUser(updatedUser);\n    }\n\n   async function handleSubmit(e) {\n        e.preventDefault();\n        if (user.password1 !== user.password2) {\n            setError(true)\n        } else {\n            const options = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': \"application/json\",\n                    'X-CSRFToken': Cookies.get('csrftoken')\n                },\n                body: JSON.stringify(user)\n            }\n           const response = await fetch(\"/rest-auth/registration/\", options)\n                if (response.ok === false) {\n                    const data = await response.json()\n                    if (data.username) {\n                        data.username.map(element => console.log(element))\n                    }\n                    if(data.email) {\n                        data.email.map(element => console.log(element))\n                    }\n                    if (data.password1) {\n                        data.password1.map(element => console.log(element))\n                    }\n                } else {\n                    const data = await response.json();\n                    Cookies.set(\"Authorization\", `Token: ${data.key}`)\n                    props.setIsAuth(true)\n                }\n            }\n        }\n\n    if (props.isAuth) {\n        return <Redirect to=\"/profile\"/>\n    }\n\n    return (\n        <div className=\"registration-container\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username:</label>\n                    <input\n                        id=\"username\"\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"Enter Username..\"\n                        onChange={handleChange}\n                        value={user.username}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email:</label>\n                    <input\n                        id=\"email\"\n                        className=\"form-control\"\n                        type=\"email\"\n                        placeholder=\"Enter Email...\"\n                        onChange={handleChange}\n                        value={user.email}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password1\">Password:</label>\n                    <input\n                        id=\"password1\"\n                        className=\"form-control\"\n                        type=\"password\"\n                        placeholder=\"Enter Password...\"\n                        onChange={handleChange}\n                        value={user.password1}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password2\">Confirm Password:</label>\n                    <input\n                        id=\"password2\"\n                        className=\"form-control\"\n                        type=\"password\"\n                        placeholder=\"Enter Password...\"\n                        onChange={handleChange}\n                        value={user.password2}\n                    />\n                    {error && (\n                        <span className=\"text-danger\">\n                            Passwords do not match\n                        </span>\n                    )}\n                    \n                </div>\n                <button type='submit' className=\"btn btn-success\">Register</button>\n            </form>\n        </div>\n    );\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport Cookies from 'js-cookie'\nimport { Redirect, withRouter } from 'react-router'\n\nfunction Login(props) {\n\n    const [user, setUser] = useState({\n        username: \"\",\n        password: \"\"\n    })\n\n    function handleChange(e) {\n        let updatedUser = {...user, \n        }\n        updatedUser[e.target.id] = e.target.value\n        setUser(updatedUser)\n    }\n\n   async function handleSubmit(e) {\n        e.preventDefault()\n        const options = {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify(user)\n        }\n        const response = await fetch(\"/rest-auth/login/\", options)\n        if (response.ok === false) {\n            const data = await response.json()\n        } else {\n            const data = await response.json()\n            Cookies.set(\"Authorization\", `Token ${data.key}`)\n            props.setIsAuth(true);\n        }\n    }\n\n    if (props.isAuth) {\n        return <Redirect to=\"/\"/>\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                <label htmlFor=\"username\">Username:</label>\n                    <input value={user.username} className=\"form-control\" type=\"text\" id=\"username\" onChange={handleChange} placeholder=\"Enter Username..\" />\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"password\">Password:</label>\n                    <input value={user.password} className=\"form-control\" type=\"password\" id=\"password\" onChange={handleChange} placeholder=\"Enter Password..\" />\n                </div>\n                <button type='submit'>Login</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { useState, useEffect } from \"react\";\nimport \"./BlogDetailReadOnly.css\";\n\nfunction BlogDetailReadOnly(props) {\n\n    const [blogObj, setBlogObj] = useState({\n        id: null,\n        author: \"\",\n        title: \"\",\n        body: \"\",\n        category: \"\",\n        image: \"\",\n        status: \"\",\n    })\n\n\n    const blogID = props.match.params.id;\n\n    useEffect(() => {\n        getBlogDetail();\n    }, []);\n\n    async function getBlogDetail() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/articles/${blogID}/`, options);\n        if (response.ok === false) {\n            console.log(\"Detail Failed\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"success\", data);\n            setBlogObj({\n                id: data.id,\n                author: data.author,\n                title: data.title,\n                body: data.body,\n                category: data.category,\n                image: data.image,\n                status: data.status,\n            })\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"blog-detail-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={blogObj.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{blogObj.category}</p>\n                        <h2 className=\"blog-card-title\">{blogObj.title}</h2>\n                        <p>{blogObj.body}</p>\n                        <p className=\"blog-card-author\">Author:{blogObj.author}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(BlogDetailReadOnly);\n","import React from \"react\";\n\nimport {withRouter, Redirect } from \"react-router-dom\";\nimport Cookies from 'js-cookie'\n\nfunction AdminBlogSubmitPost(props) {\n\n\n    async function handleRejectClick() {\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            status: 'RJT'\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/admin/ALL/${props.id}/`, options)\n        if (response.ok === false) {\n            console.log(\"REJECTED FAILED\", response);\n        } else {\n            const data = await response.json()\n            console.log(\"SUCCESS REJECTED\", data);\n        }\n    }\n\n    async function handlePublishClick() {\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            status: 'PBLH'\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/admin/ALL/${props.id}/`, options)\n        if (response.ok === false) {\n            console.log(\"PUBLISHED FAILED\", response);\n        } else {\n            const data = await response.json()\n            console.log(\"SUCCESS PUBLISHED\", data);\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"ownblog-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={props.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{props.category}</p>\n                        <h2 className=\"blog-card-title\">{props.title}</h2>\n                        <p className=\"blog-card-author\">{props.author}</p>\n                    </div>\n                    <div className=\"ownblog-edit-btn-container\">\n                      <button className=\"btn btn-danger ownblog-btn\" onClick={handleRejectClick}>Reject</button>\n                        <button className=\"btn btn-success ownblog-btn\" onClick={handlePublishClick}>\n                            Publish\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(AdminBlogSubmitPost)","import React from \"react\";\n\nimport {withRouter, Redirect } from \"react-router-dom\";\nimport Cookies from 'js-cookie'\n\nfunction AdminBlogRejectPost(props) {\n\n    async function handleRejectClick() {\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            status: 'SBMT'\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/admin/ALL/${props.id}/`, options)\n        if (response.ok === false) {\n            console.log(\"REJECTED FAILED\", response);\n        } else {\n            const data = await response.json()\n            console.log(\"SUCCESS REJECTED\", data);\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"ownblog-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={props.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{props.category}</p>\n                        <h2 className=\"blog-card-title\">{props.title}</h2>\n                        <p className=\"blog-card-author\">{props.author}</p>\n                    </div>\n                    <div className=\"ownblog-edit-btn-container\">\n                      <button className=\"btn btn-danger ownblog-btn\" onClick={handleRejectClick}>Reverse Rejection</button>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(AdminBlogRejectPost)","import React from \"react\";\nimport {withRouter, Redirect } from \"react-router-dom\";\nimport Cookies from 'js-cookie'\n\nfunction AdminBlogPublishPost(props) {\n\n    async function handlePublishClick() {\n        let updatedObj = {\n            title: props.title,\n            body: props.body,\n            category: props.category,\n            status: 'SBMT'\n        }\n\n        const options = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify(updatedObj)\n        }\n        const response = await fetch(`/api/articles/admin/ALL/${props.id}/`, options)\n        if (response.ok === false) {\n        } else {\n            const data = await response.json()\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"ownblog-card-container\">\n                    <div className=\"blog-card-img-container\">\n                        <img\n                            className=\"blog-card-img\"\n                            src={props.image}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"blog-card-text-container\">\n                        <p className=\"blog-card-category\">{props.category}</p>\n                        <h2 className=\"blog-card-title\">{props.title}</h2>\n                        <p className=\"blog-card-author\">{props.author}</p>\n                    </div>\n                    <div className=\"ownblog-edit-btn-container\">\n                      <button className=\"btn btn-danger ownblog-btn\" onClick={handlePublishClick}>Reverse Publication</button>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(AdminBlogPublishPost)","import Cookies from \"js-cookie\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport AdminBlogSubmitPost from \"./AdminBlogSubmitPost/AdminBlogSubmitPost\";\nimport AdminBlogRejectPost from \"./AdminBlogRejectPost/AdminBlogRejectPost\";\nimport AdminBlogPublishPost from \"./AdminBlogPublishPost/AdminBlogPublishPost\";\nimport BlogPost from \"../../Main/BlogPostList/BlogPost/BlogPost\";\nimport \"./AdminBlogList.css\";\n\nexport default function AdminBlogList() {\n    const [adminArticles, setAdminArtcles] = useState([]);\n    const [categorySelection, setCategorySelection] = useState(\"ALL\");\n\n\n\n    useEffect(() => {\n        grabAdminArticles(categorySelection);\n    }, [categorySelection]);\n\n    async function grabAdminArticles(category = \"ALL\") {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/articles/admin/${category}`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"FAILED\", response);\n        } else {\n            const data = await response.json();\n            setAdminArtcles(data);\n        }\n    }\n\n   function handleOptionChange(e) {\n        setCategorySelection(e.target.value);\n    }\n    \n    let html;\n    if (categorySelection == \"SBMT\") {\n        html = adminArticles.map((blog) => {\n            return <AdminBlogSubmitPost {...blog} />\n        })\n    } else if (categorySelection == \"ALL\" || categorySelection == \"DFT\") {\n        html = adminArticles.map((blog) => {\n            return <BlogPost {...blog} />\n        })\n    } else if (categorySelection == \"RJT\") {\n        html = adminArticles.map((blog) => {\n            return <AdminBlogRejectPost {...blog} />\n        })\n    } else if (categorySelection == \"PBLH\") {\n        html = adminArticles.map((blog) => {\n            return <AdminBlogPublishPost {...blog} />\n        })\n    }\n\n\n    return (\n        <div className=\"admin-blog-list-container\">\n            <form className=\"form-control\">\n                <div className=\"form-group\">\n                    <label HTMLfor=\"status\">Filter Articles by Status:</label>\n\n                    <select\n                        id=\"status\"\n                        className=\"form-select\"\n                        onChange={handleOptionChange}\n                        value={categorySelection}\n                    >\n                        <option value=\"ALL\" selected>\n                            All\n                        </option>\n                        <option value=\"DFT\">Draft</option>\n                        <option value=\"SBMT\">Submitted</option>\n                        <option value=\"PBLH\">Published</option>\n                        <option value=\"RJT\">Rejected</option>\n                    </select>\n                </div>\n            </form>\n\n            <div className=\"ownblogs-list-container\">{html}</div>\n        </div>\n    );\n}\n","import \"./App.css\";\nimport Cookies from \"js-cookie\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport UserBlogList from \"./components/User/UserBlogList/UserBlogList\";\nimport UserBlogEditDetail from \"./components/User/UserBlogEditDetail/UserBlogEditDetail\";\nimport Main from \"./components/Main/Main\";\nimport Profile from \"./components/User/Profile/Profile\";\nimport Registration from \"./components/User/Registration/Registration\";\nimport Login from \"./components/User/Login/Login\";\nimport BlogForm from \"./components/Main/BlogForm/BlogForm\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Switch, withRoute, useHistory } from \"react-router-dom\";\nimport BlogDetailReadOnly from \"./components/Main/BlogDetail/BlogDetailReadOnly\";\nimport AdminBlogList from \"./components/User/AdminBlogList/AdminBlogList\";\n\nfunction App() {\n    const [isAuth, setIsAuth] = useState();\n    const [currentBlogs, setCurrentBlogs] = useState([]);\n    const history = useHistory();\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [filter, setFilter] = useState(null);\n    const [userDetails, setUserDetails] = useState({\n        username: \"\",\n        email: \"\",\n    })\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            const response = await fetch(\"/rest-auth/user/\");\n            if (response.ok === false) {\n                setIsAuth(false);\n            } else {\n                setIsAuth(true);\n            }\n        };\n        checkAuth();\n    }, []);\n\n    useEffect(() => {\n        grabBlogs();\n    }, []);\n\n    useEffect(() => {\n        grabUserDetails();\n    }, [isAuth]);\n\n    async function grabBlogs() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"/api/articles/\", options);\n        const data = await response.json();\n        if (response.ok === false) {\n        } else {\n            setCurrentBlogs(data);\n        }\n    }\n\n    async function grabUserDetails() {\n        let options = {\n            method: \"GET\",\n            header: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": \"csrftoken\",\n            },\n        };\n        let response = await fetch(\"/rest-auth/user/\", options);\n        if (response.ok === false) {\n            console.log(\"FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"success grabbing details\", data);\n            setUserDetails({\n                \"username\": data.username,\n                \"email\": data.email\n            })\n            if (data.is_staff === true || data.is_superuser === true) {\n                setIsAdmin(true);\n            }\n        }\n    }\n\n    function filteredBlogs() {\n        if (filter && filter !== \"All\") {\n            return currentBlogs.filter((blog) => blog.category === filter);\n        } else {\n            return currentBlogs;\n        }\n    }\n\n    return (\n        <>\n            <Header\n                currentBlogs={currentBlogs}\n                isAuth={isAuth}\n                setFilter={setFilter}\n                setIsAuth={setIsAuth}\n                isAdmin={isAdmin}\n            />\n            <Switch>\n                <Route path=\"/registration\">\n                    <Registration isAuth={isAuth} setIsAuth={setIsAuth} />\n                </Route>\n                <Route path=\"/profile\">\n                    <Profile userDetails={userDetails}/>\n                </Route>\n                <Route path=\"/admin/portal\">\n                    <AdminBlogList />\n                </Route>\n                <Route path=\"/account/blogs/create\">\n                    <BlogForm />\n                </Route>\n                <Route path=\"/account/blogs/drafts\">\n                    <UserBlogList />\n                </Route>\n                <Route path=\"/login\">\n                    <Login isAuth={isAuth} setIsAuth={setIsAuth}/>\n                </Route>\n                <Route path=\"/logout\">\n                    <Login isAuth={isAuth} setIsAuth={setIsAuth} />\n                </Route>\n                <Route path=\"/blogs/detail/:id\">\n                    <BlogDetailReadOnly />\n                </Route>\n                <Route path=\"/account/blogs/detail/:id\">\n                    <UserBlogEditDetail />\n                </Route>\n                <Route path=\"/\">\n                    <Main\n                        setFilter={setFilter}\n                        filteredBlogs={filteredBlogs}\n                        currentBlogs={currentBlogs}\n                    />\n                </Route>\n            </Switch>\n            <Footer />\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"bootstrap/dist/js/bootstrap.bundle\"\nimport \"bootstrap/dist/js/bootstrap\"\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}